<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         point="org.eclipse.cdt.managedbuilder.core.buildProperties">
      <propertyValue
            id="org.buildroot.cdt.toolchain.buildArtefactType.application"
            name="Buildroot Cross Target Application"
            property="org.eclipse.cdt.build.core.buildArtefactType">
      </propertyValue>
   </extension>
   <extension
         id="BUILDROOT_GCC_BuildDefinitions"
         name="Managed Build Definitions"
         point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
      <managedBuildRevision
            fileVersion="1.0.0">
      </managedBuildRevision>
      <dynamicElementProvider
      class="org.buildroot.cdt.toolchain.DynamicToolchainProvider"
      name="DynamicToolchainProvider"/>
      <toolChain
            archList="all"
            id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.toolchain.base"
            isAbstract="false"
            name="Buildroot ARM Linux GCC"
            osList="linux"
            targetTool="cdt.managedbuild.tool.gnu.c.linker;cdt.managedbuild.tool.gnu.cpp.linker;cdt.managedbuild.tool.gnu.archiver">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.GNU_ELF"
               id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.platform.base"
               isAbstract="false"
               name="Linux Platform"
               osList="linux">
         </targetPlatform>
         <tool
               command="arm-linux-gnueabi-as"
               commandLineGenerator="org.eclipse.cdt.managedbuilder.internal.core.ManagedCommandLineGenerator"
               errorParsers="org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GASErrorParser"
               id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.assembler"
               isAbstract="false"
               name="Buildroot ARM Linux GCC Assembler"
               natureFilter="both"
               outputFlag="-o">
            <supportedProperties>
               <property
                     id="org.eclipse.cdt.build.core.buildType">
                  <value
                        id="org.eclipse.cdt.build.core.buildType.debug">
                  </value>
                  <value
                        id="org.eclipse.cdt.build.core.buildType.release">
                  </value>
               </property>
            </supportedProperties>
            <envVarBuildPath
                  pathType="buildpathInclude"
                  variableList="CPATH,C_INCLUDE_PATH">
            </envVarBuildPath>
            <inputType
                  dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.gnu.DefaultGCCDependencyCalculator2"
                  dependencyContentType="org.eclipse.cdt.core.cHeader"
                  dependencyExtensions="h"
                  id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.assembler.input"
                  languageId="org.eclipse.cdt.core.assembly"
                  sourceContentType="org.eclipse.cdt.core.asmSource"
                  sources="s,S,asm"
                  superClass="cdt.managedbuild.tool.gnu.assembler.input">
            </inputType>
            <outputType
                  buildVariable="OBJS"
                  id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.output"
                  outputs="o"
                  superClass="cdt.managedbuild.tool.gnu.assembler.output">
            </outputType>
         </tool>
         <tool
               command="arm-linux-gnueabi-gcc"
               commandLineGenerator="org.eclipse.cdt.managedbuilder.internal.core.ManagedCommandLineGenerator"
               errorParsers="org.eclipse.cdt.core.GCCErrorParser"
               id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.c.compiler"
               isAbstract="false"
               name="Buildroot ARM Linux GCC C Compiler"
               natureFilter="both"
               superClass="cdt.managedbuild.tool.gnu.c.compiler">
            <inputType
                  id="org.buildroot.cdt.toolchain.input"
                  scannerConfigDiscoveryProfileId="org.buildroot.cdt.toolchain.ARM_ManagedMakePerProjectProfileC"
                  superClass="cdt.managedbuild.tool.gnu.c.compiler.input">
            </inputType>
         </tool>
         <builder
               command="make"
               id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.builder"
               isAbstract="false"
               isVariableCaseSensitive="false"
               name="Buildroot ARM GNU Make builder"
               superClass="cdt.managedbuild.target.gnu.builder">
         </builder>
         <tool
               advancedInputCategory="false"
               command="arm-linux-gnueabi-gcc"
               commandLineGenerator="org.eclipse.cdt.managedbuilder.internal.core.ManagedCommandLineGenerator"
               errorParsers="org.eclipse.cdt.core.GLDErrorParser"
               id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.c.linker"
               isAbstract="false"
               name="Buildroot ARM GCC C Linker"
               natureFilter="cnature"
               outputFlag="-o"
               superClass="cdt.managedbuild.tool.gnu.c.linker">
         </tool>
      </toolChain>
       <!--projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="com.analog.gnu.toolchain.blackfin.target.bfin.elf.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.elf.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.exe.debug"
                  superClass="org.buildroot.cdt.toolchain.arm.linux.gnueabi.toolchain.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="com.analog.gnu.toolchain.blackfin.config.bfin.elf.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="com.analog.gnu.toolchain.blackfin.toolchain.bfin.elf.exe.release"
                  superClass="org.buildroot.cdt.toolchain.arm.linux.gnueabi.toolchain.base">
            </toolChain>
         </configuration>
      </projectType-->
   </extension>


 <extension
         id="ARM_ManagedMakePerProjectProfileC"
         name="ARM ManagedMakePerProjectProfileC"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="org.buildroot.cdt.toolchain.DefaultGCCScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>
      <buildOutputProvider>
      <open></open>
         <scannerInfoConsoleParser
               class="org.buildroot.cdt.toolchain.ManagedGCCScannerInfoConsoleParser">
         </scannerInfoConsoleParser>
      </buildOutputProvider>
      <scannerInfoProvider
            providerId="specsFile">
         <run
               arguments="-E -P -v -dD ${plugin_state_location}/specs.c"
               class="org.eclipse.cdt.make.internal.core.scannerconfig2.GCCSpecsRunSIProvider"
               command="/home/melanie/buildroot/output/host/usr/bin/arm-none-linux-gnueabi-gcc">
         </run>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
 <extension
       point="org.eclipse.cdt.core.templateAssociations">
    <template
          id="org.eclipse.cdt.build.core.templates.EmptyProject">
       <toolChain
             id="org.buildroot.cdt.toolchain.arm.linux.gnueabi.toolchain.base">
       </toolChain>
    </template>
 </extension>
</plugin>
